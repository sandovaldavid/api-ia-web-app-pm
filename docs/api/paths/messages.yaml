# Rutas de chats

chats:
    post:
        tags:
            - Chats
        summary: Crear un nuevo chat
        description: Crea un nuevo chat para el usuario autenticado
        operationId: createChat
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                example: 'Chat sobre la tarea X'
                            taskId:
                                type: string
                                example: '61234567890abcdef1234567'
                            projectId:
                                type: string
                                example: '61234567890abcdef1234567'
        responses:
            201:
                $ref: '../components/responses.yaml#/SuccessResponse'
            400:
                $ref: '../components/responses.yaml#/BadRequestError'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

    get:
        tags:
            - Chats
        summary: Obtener todos los chats del usuario
        description: Obtiene todos los chats del usuario autenticado
        operationId: getChats
        parameters:
            - $ref: '../components/parameters.yaml#/statusParam'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

chat:
    get:
        tags:
            - Chats
        summary: Obtener un chat por ID
        description: Obtiene un chat específico por su ID
        operationId: getChat
        parameters:
            - $ref: '../components/parameters.yaml#/idParam'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

    put:
        tags:
            - Chats
        summary: Actualizar un chat
        description: Actualiza un chat específico por su ID
        operationId: updateChat
        parameters:
            - $ref: '../components/parameters.yaml#/idParam'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                example: 'Nuevo título del chat'
                            status:
                                type: string
                                enum: [active, archived]
                                example: 'active'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            400:
                $ref: '../components/responses.yaml#/BadRequestError'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

    patch:
        tags:
            - Chats
        summary: Actualizar parcialmente un chat
        description: Actualiza parcialmente un chat específico por su ID
        operationId: patchChat
        parameters:
            - $ref: '../components/parameters.yaml#/idParam'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                example: 'Nuevo título del chat'
                            status:
                                type: string
                                enum: [active, archived]
                                example: 'active'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            400:
                $ref: '../components/responses.yaml#/BadRequestError'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

    delete:
        tags:
            - Chats
        summary: Eliminar un chat
        description: Elimina un chat específico por su ID
        operationId: deleteChat
        parameters:
            - $ref: '../components/parameters.yaml#/idParam'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

archiveChat:
    patch:
        tags:
            - Chats
        summary: Archivar un chat
        description: Archiva un chat específico por su ID
        operationId: archiveChat
        parameters:
            - $ref: '../components/parameters.yaml#/idParam'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

chatMessages:
    get:
        tags:
            - Mensajes
        summary: Obtener todos los mensajes de un chat
        description: Obtiene todos los mensajes de un chat específico
        operationId: getChatMessages
        parameters:
            - $ref: '../components/parameters.yaml#/chatIdParam'
        responses:
            200:
                $ref: '../components/responses.yaml#/SuccessResponse'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'

    post:
        tags:
            - Mensajes
        summary: Crear un nuevo mensaje en un chat
        description: Crea un nuevo mensaje en un chat específico
        operationId: createChatMessage
        parameters:
            - $ref: '../components/parameters.yaml#/chatIdParam'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            prompt:
                                type: string
                                example: '¿Cuál es el estado de la tarea X?'
                            requestType:
                                type: string
                                enum:
                                    [
                                        task_parameterization,
                                        resource_assignment,
                                        project_context,
                                        code_suggestion,
                                        user_message,
                                        ai_response,
                                    ]
                                example: 'user_message'
                            taskId:
                                type: string
                                example: '61234567890abcdef1234567'
                            projectId:
                                type: string
                                example: '61234567890abcdef1234567'
        responses:
            201:
                $ref: '../components/responses.yaml#/SuccessResponse'
            400:
                $ref: '../components/responses.yaml#/BadRequestError'
            401:
                $ref: '../components/responses.yaml#/UnauthorizedError'
            403:
                $ref: '../components/responses.yaml#/ForbiddenError'
            404:
                $ref: '../components/responses.yaml#/NotFoundError'
            500:
                $ref: '../components/responses.yaml#/ServerError'
